@use '../../assets/styles/index.scss' as abstract;
@use '../../assets/styles/abstracts/functions.scss' as utils;


.input-fragment, .input-fragment--dark {
    @include abstract.flex-position(column, space-around, flex-start);

    position: relative;
    gap: 0.5rem;
    outline: none;


    &__label {
        @include abstract.font-size-config($font_size:abstract.$font-size-p ,$font_weight: 600);

        color: abstract.$base-white;
        margin-left: utils.px-to-rem-converter(5);
    }

    &__input-field {
        @include abstract.border-config($border_width:
        abstract.$border-width-md,$border_color: abstract.$alternative-a300);

        display: inline-block;
        width: 100%;
        padding: 1rem;
        transition: outline .1s linear;
        font-size: utils.px-to-rem-converter(abstract.$font-size-h4);
    }


    &__label, &__input-field {
        &::placeholder {
            @include abstract.font-size-config($font_size: abstract.$font-size-p, $font_weight: 400);

            color: abstract.$grayscale-g300;
        }

        &:focus-visible{
            @include abstract.custom-outline($outline_color: abstract.$alternative-a100);
        }
    }

    // webkit, mozkit engine support for custom styles for range input
    input[type=range] {
       @include abstract.custom-range-input-thumb;
    }

    // radio support
    input[type=radio], input[type=checkbox]{
        position: absolute;
        transform: translateX(70px);
        width: utils.px-to-rem-converter(20);
        height: utils.px-to-rem-converter(20);
    }
}


// dark theme for input
.input-fragment--dark {
    .input-fragment__label {
        color: abstract.$base-black;
    }

    .input-fragment__input-field{
        @include abstract.border-config($border_color: abstract.$alternative-a700);

        &::placeholder{
            @include abstract.font-size-config($font_size: abstract.$font-size-p, $font_weight: 400);

            color: abstract.$grayscale-g500
        }

        &:focus-visible{
            @include abstract.custom-outline($outline_color: abstract.$alternative-a300);
        }
    }
}
